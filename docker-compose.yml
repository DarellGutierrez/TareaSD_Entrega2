services:
  generador:
    build: ./generador_trafico
    volumes:
      - ./dataset:/app/dataset #vincular el directorio donde se ubica el dataset al directorio /app del contenedor
      - ./generador_trafico:/app #introducir el directorio entero dentro de docker para poder ejecutar el script directamente
    depends_on:
      - cache
    networks:
      - appnet

  cache:
    build: ./cache
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_MAXMEMORY=100mb
      - REDIS_POLICY=allkeys-lru
    depends_on:
      - redis
      - db
      - score
    networks:
      - appnet

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - appnet
  score:
    build: ./score
    ports:
      - "5000:5000"
    depends_on:
      - db
    volumes:
      - ./dataset:/app/dataset #vincular el directorio donde se ubica el dataset al directorio /app del contenedor
    networks:
      - appnet

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db_consultas
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - appnet

networks:
  appnet:

volumes:
  db_data: